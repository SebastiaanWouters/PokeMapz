{"version":3,"sources":["../../js/status.js"],"names":["monthArray","rawDataIsLoading","statusPagePassword","groupByWorker","minUpdateDelay","lastRawUpdateTime","Date","addMainWorker","hash","worker","$","appendTo","addTable","processMainWorker","i","hashFnv32a","length","html","replace","addWorker","mainWorkerHash","workerHash","row","processWorker","lastModified","getHours","getMinutes","slice","getSeconds","getDate","getMonth","getFullYear","parseResult","result","each","main_workers","workers","table","find","click","tableSort","parents","eq","rows","toArray","sort","compare","index","asc","reverse","append","getCellValue","children","a","b","valA","valB","isNumeric","localeCompare","updateStatus","loadRawData","done","always","diff","delay","Math","max","window","setTimeout","str","asString","seed","l","hval","undefined","charCodeAt","toString","substr","ajax","url","type","data","dataType","beforeSend","complete","document","ready","focus","submit","event","preventDefault","val","login","remove","effect","change","checked"],"mappings":"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","file":"status.built.js","sourcesContent":["/* Shared */\nvar monthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n/* Main stats page */\nvar rawDataIsLoading = false\nvar statusPagePassword = false\nvar groupByWorker = true\n\n// Raw data updating\nvar minUpdateDelay = 1000 // Minimum delay between updates (in ms).\nvar lastRawUpdateTime = new Date()\n\n\n/*\n * Workers\n */\nfunction addMainWorker(hash) {\n    var worker = `\n     <div id=\"worker_${hash}\" class=\"worker\">\n       <span id=\"name_${hash}\" class=\"name\"></span>\n       <span id=\"method_${hash}\" class=\"method\"></span>\n       <span id=\"message_${hash}\" class=\"message\"></span>\n     </div>\n   `\n\n    $(worker).appendTo('#status_container')\n    addTable(hash)\n}\n\nfunction processMainWorker(i, worker) {\n    var hash = hashFnv32a(worker['worker_name'], true)\n\n    if ($('#worker_' + hash).length === 0) {\n        addMainWorker(hash)\n    }\n\n    $('#name_' + hash).html(worker['worker_name'])\n    $('#method_' + hash).html('(' + worker['method'] + ')')\n    $('#message_' + hash).html(worker['message'].replace(/\\n/g, '<br>'))\n}\n\nfunction addWorker(mainWorkerHash, workerHash) {\n    var row = `\n     <div id=\"row_${workerHash}\" class=\"status_row\">\n       <div id=\"username_${workerHash}\" class=\"status_cell\"/>\n       <div id=\"success_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"fail_${workerHash}\"     class=\"status_cell\"/>\n       <div id=\"no_items_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"skip_${workerHash}\"     class=\"status_cell\"/>\n       <div id=\"captchas_${workerHash}\" class=\"status_cell\"/>\n       <div id=\"lastmod_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"message_${workerHash}\"  class=\"status_cell\"/>\n     </div>\n   `\n\n    $(row).appendTo('#table_' + mainWorkerHash)\n}\n\nfunction processWorker(i, worker) {\n    var hash = hashFnv32a(worker['username'], true)\n    var mainWorkerHash\n    if (groupByWorker) {\n        mainWorkerHash = hashFnv32a(worker['worker_name'], true)\n        if ($('#table_' + mainWorkerHash).length === 0) {\n            return\n        }\n    } else {\n        mainWorkerHash = 'global'\n        if ($('#table_global').length === 0) {\n            addTable('global')\n        }\n    }\n\n    if ($('#row_' + hash).length === 0) {\n        addWorker(mainWorkerHash, hash)\n    }\n\n    var lastModified = new Date(worker['last_modified'])\n    lastModified = lastModified.getHours() + ':' +\n        ('0' + lastModified.getMinutes()).slice(-2) + ':' +\n        ('0' + lastModified.getSeconds()).slice(-2) + ' ' +\n        lastModified.getDate() + ' ' +\n        monthArray[lastModified.getMonth()] + ' ' +\n        lastModified.getFullYear()\n\n    $('#username_' + hash).html(worker['username'])\n    $('#success_' + hash).html(worker['success'])\n    $('#fail_' + hash).html(worker['fail'])\n    $('#no_items_' + hash).html(worker['no_items'])\n    $('#skip_' + hash).html(worker['skip'])\n    $('#captchas_' + hash).html(worker['captcha'])\n    $('#lastmod_' + hash).html(lastModified)\n    $('#message_' + hash).html(worker['message'])\n}\n\nfunction parseResult(result) {\n    if (groupByWorker) {\n        $.each(result.main_workers, processMainWorker)\n    }\n    $.each(result.workers, processWorker)\n}\n\n\n/*\n * Tables\n */\nfunction addTable(hash) {\n    var table = `\n     <div class=\"status_table\" id=\"table_${hash}\">\n       <div class=\"status_row header\">\n         <div class=\"status_cell\">\n           Username\n         </div>\n         <div class=\"status_cell\">\n           Success\n         </div>\n         <div class=\"status_cell\">\n           Fail\n         </div>\n         <div class=\"status_cell\">\n           No Items\n         </div>\n         <div class=\"status_cell\">\n           Skipped\n         </div>\n         <div class=\"status_cell\">\n           Captchas\n         </div>\n         <div class=\"status_cell\">\n           Last Modified\n         </div>\n         <div class=\"status_cell\">\n           Message\n         </div>\n       </div>\n     </div>\n   `\n\n    table = $(table)\n    table.appendTo('#status_container')\n    table.find('.status_row.header .status_cell').click(tableSort)\n}\n\nfunction tableSort() {\n    var table = $(this).parents('.status_table').eq(0)\n    var rows = table.find('.status_row:gt(0)').toArray().sort(compare($(this).index()))\n    this.asc = !this.asc\n    if (!this.asc) {\n        rows = rows.reverse()\n    }\n    for (var i = 0; i < rows.length; i++) {\n        table.append(rows[i])\n    }\n}\n\nfunction getCellValue(row, index) {\n    return $(row).children('.status_cell').eq(index).html()\n}\n\n\n/*\n * Helpers\n */\nfunction compare(index) {\n    return function (a, b) {\n        var valA = getCellValue(a, index)\n        var valB = getCellValue(b, index)\n        return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB)\n    }\n}\n\nfunction updateStatus() {\n    loadRawData().done(function (result) {\n        // Parse result on success.\n        parseResult(result)\n    }).always(function () {\n        // Only queue next request when previous is over.\n        // Minimum delay of minUpdateDelay.\n        var diff = new Date() - lastRawUpdateTime\n        var delay = Math.max(minUpdateDelay - diff, 1) // Don't go below 1.\n\n        // Don't use interval.\n        window.setTimeout(updateStatus, delay)\n    })\n}\n\n/**\n * Calculate a 32 bit FNV-1a hash\n * Found here: https://gist.github.com/vaiorabbit/5657561\n * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param {string} str the input value\n * @param {boolean} [asString=false] set to true to return the hash value as\n *     8-digit hex string instead of an integer\n * @param {integer} [seed] optionally pass the hash of the previous chunk\n * @returns {integer | string}\n */\nfunction hashFnv32a(str, asString, seed) {\n    /* jshint bitwise:false */\n    var i\n    var l\n    var hval = (seed === undefined) ? 0x811c9dc5 : seed\n\n    for (i = 0, l = str.length; i < l; i++) {\n        hval ^= str.charCodeAt(i)\n        hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24)\n    }\n\n    if (asString) {\n        // Convert to 8 digit hex string\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8)\n    }\n    return hval >>> 0\n}\n\nfunction loadRawData() {\n    return $.ajax({\n        url: 'status',\n        type: 'post',\n        data: {\n            'password': statusPagePassword\n        },\n        dataType: 'json',\n        beforeSend: function () {\n            if (rawDataIsLoading) {\n                return false\n            } else {\n                rawDataIsLoading = true\n            }\n        },\n        complete: function () {\n            rawDataIsLoading = false\n        }\n    })\n}\n\n\n/*\n * Document ready\n */\n$(document).ready(function () {\n    // Set focus on password field.\n    $('#password').focus()\n\n    // Register to events.\n    $('#password_form').submit(function (event) {\n        event.preventDefault()\n\n        statusPagePassword = $('#password').val()\n\n        loadRawData().done(function (result) {\n            if (result.login === 'ok') {\n                $('.status_form').remove()\n                parseResult(result)\n                window.setTimeout(updateStatus, minUpdateDelay)\n            } else {\n                $('.status_form').effect('bounce')\n                $('#password').focus()\n            }\n        })\n    })\n\n    $('#groupbyworker-switch').change(function () {\n        groupByWorker = this.checked\n\n        $('#status_container .status_table').remove()\n        $('#status_container .worker').remove()\n\n        if (statusPagePassword) {\n            updateStatus()\n        }\n    })\n})\n"]}